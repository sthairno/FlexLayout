name: Install OpenSiv3D SDK
description: Download the OpenSiv3D SDK for Windows from the URL and unpack it to the destination path.

inputs:
  download-url:
    description: Url for downloading .zip file
    required: true
  siv3d-env:
    description: Name of a environment variable
    required: true
  destination:
    description: Destination path to install SDK

outputs:
  destination: ${{ steps.set-destination-path.outputs.path }}

runs:
  using: 'composite'
  steps:
    - name: Determine installation path
      id: set-destination-path
      uses: actions/github-script@v7
      with:
        script: |
          const envname = core.getInput("siv3d-env", { required: true });
          const dest_input = core.getInput("destination");
          const dest = core.toPlatformPath(dest_input ? dest_input : "/OpenSiv3D_SDK");

          core.exportVariable(envname, dest);
          core.setOutput("path", dest);

    - name: Restore Cached SDK Files
      id: restore-sdk-cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.set-destination-path.outputs.path }}
        key: ${{ inputs.siv3d-env }}

    - name: Download SDK Zip File
      if: steps.restore-sdk-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        curl -L -o '${{ runner.temp }}/sdk.zip' '${{ inputs.download-url }}'

    - name: Extract SDK Files
      if: steps.restore-sdk-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        tmp_zippath='${{ runner.temp }}/sdk.zip'
        tmp_sdkpath=$(echo '${{ runner.temp }}/sdk' | sed 's|\\|/|g') # for cp command
        destination_path='${{ steps.set-destination-path.outputs.path }}'

        unzip -d $tmp_sdkpath $tmp_zippath
        mkdir -p $destination_path
        cp -r $tmp_sdkpath/$(ls $tmp_sdkpath | head -n 1)/* $destination_path
        rm -r $tmp_sdkpath $tmp_zippath

        ls -al $destination_path
    
    - name: Save SDK Files
      if: steps.restore-sdk-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.set-destination-path.outputs.path }}
        key: ${{ steps.restore-sdk-cache.outputs.cache-primary-key }}
